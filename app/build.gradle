plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'com.squareup.sqldelight'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

sqldelight {
    PuppyDatabase {
        packageName = "com.example.androiddevchallenge.database"
    }
}

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.example.androiddevchallenge"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.incremental": "true"]
            }
        }
    }

    signingConfigs {
        // We use a bundled debug keystore, to allow debug builds from CI to be upgradable
        debug {
            storeFile rootProject.file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        compose true

        // Disable unused AGP features
        buildConfig false
        aidl false
        renderScript false
        resValues false
        shaders false
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }

    packagingOptions {
        // Multiple dependency bring these files in. Exclude them to enable
        // our test APK to build (has no effect on our AARs)
        excludes += "/META-INF/AL2.0"
        excludes += "/META-INF/LGPL2.1"
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation "androidx.activity:activity-compose:1.3.0-alpha03"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.0'
    implementation "com.squareup.sqldelight:android-driver:$sqldelight_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-cio:$ktor_version"
    implementation "io.ktor:ktor-client-serialization:$ktor_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$serialization_version"
    implementation "dev.chrisbanes.accompanist:accompanist-coil:$accompanist_version"
    implementation "dev.chrisbanes.accompanist:accompanist-insets:$accompanist_version"
    implementation "com.arkivanov.decompose:decompose:$decompose_version"
    implementation "com.arkivanov.decompose:extensions-compose-jetpack:$decompose_version"
    implementation "com.arkivanov.mvikotlin:mvikotlin:$mvikotlin_version"
    implementation "com.arkivanov.mvikotlin:mvikotlin-main:$mvikotlin_version"
    implementation "com.arkivanov.mvikotlin:mvikotlin-extensions-coroutines:$mvikotlin_version"

    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "io.ktor:ktor-client-mock:$ktor_version"
    testImplementation "com.squareup.sqldelight:sqlite-driver:$sqldelight_version"

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
}
